; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir=HASwitchPlate
default_envs = esp01_1m_serial
;default_envs = esp01_1m_ota

[common]
platform = espressif8266@2.3.3 # 2.3.3 is 2_6_3
;board = esp01_1m ; ESP01S (1MB)
board = d1_mini ; Wemos D1 Mini (4MB)
framework = arduino
;framework = esp8266-nonos-sdk
;extra_scripts = pio_script/strip-floats.py
extra_scripts = 

lib_deps = 
;  Arduino
  ArduinoJson 
  MQTT
  WiFiManager

board_build.flash_mode = dout

; set CPU frequency to 80MHz (default) or 160MHz
;board_build.f_cpu = 80000000L
board_build.f_cpu = 160000000L

; use linker script "Eagle 1MB firmware and 0B SPIFFS" for ESP01S
;board_build.ldscript = eagle.flash.1m.ld
; use linker script "Eagle 4MB firmware and 0B SPIFFS" for Wemos D1 Mini
board_build.ldscript = eagle.flash.4m.ld

; values uplifted from Tasmota 7.1 circa December 2019
; Tasmota itself is GPL v3
build_flags               = 
;${esp82xx_defaults.build_flags}
; Debugging, dump all the symbols
;                            -Wl,-Map,map.map
; reduce the featureset of BEARSSL
;                            -DBEARSSL_SSL_BASIC
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3
; NONOSDK22x_190703 = 2.2.2-dev(38a443e)
;                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
; lwIP 2 - Higher Bandwidth no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; VTABLES in Flash
                            -DVTABLES_IN_FLASH
			    -D NDEBUG
; who needs debugging anyway?
                            -DCORE_DEBUG_LEVEL=0
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++

; *** Serial Monitor options
monitor_speed = 115200

[env:esp01_1m_serial]
platform      = ${common.platform}
board         = ${common.board}
framework     = ${common.framework}
lib_deps      = ${common.lib_deps}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu      = ${common.board_build.f_cpu}
board_build.ldscript   = ${common.board_build.ldscript}
build_flags   = ${common.build_flags}
monitor_speed = ${common.monitor_speed}
extra_scripts = ${common.extra_scripts}

; *** Upload Serial reset method for Wemos and NodeMCU
; my levelshifter makes >230k unreliable. sad.
;upload_resetmethod = nodemcu
;upload_speed = 230400
upload_speed = 460800
;upload_speed = 921600
upload_port = /dev/ttyUSB0


[env:esp01_1m_ota]
platform      = ${common.platform}
board         = ${common.board}
framework     = ${common.framework}
lib_deps      = ${common.lib_deps}
board_build.flash_mode = ${common.board_build.flash_mode}
board_build.f_cpu      = ${common.board_build.f_cpu}
board_build.ldscript   = ${common.board_build.ldscript}
build_flags   = ${common.build_flags}
monitor_speed = ${common.monitor_speed}
extra_scripts = ${common.extra_scripts}

; *** Upload Over-the-Air
; each flag in a new line
upload_flags =
  --auth=PASSWORD.GOES.HERE
upload_protocol = espota
upload_port = IP.ADDR.GOES.HERE
